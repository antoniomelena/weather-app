{"version":3,"sources":["img/logo.webp","App.js","index.js"],"names":["App","txt","useState","city","setCity","name","setName","currentTemp","setCurrentTemp","description","setDescription","feelsLike","setFeelsLike","humidity","setHumidity","maxTemp","setMaxTemp","minTemp","setMinTemp","windSpeed","setWindSpeed","icon","setIcon","fahrenheit","setFahrenheit","getWeather","a","fetch","mode","res","json","city_data","city_name","city_humidity","main","feels_like","current_temp","temp","max_temp","temp_max","min_temp","temp_min","city_description","weather","wind_speed","wind","speed","console","log","useEffect","className","href","src","logo","height","id","type","onChange","event","target","value","placeholder","onClick","find","Math","round","length","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,G,MAAA,IAA0B,mC,cC6N1BA,MAlMf,WACE,IAYoBC,EAZpB,EAAwBC,mBAAS,UAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA8BZ,mBAAS,IAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA8Bd,mBAAS,IAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KACA,EAAkChB,mBAAS,IAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KACA,EAAwBlB,mBAAS,IAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACA,EAAoCpB,oBAAS,GAA7C,mBAAOqB,EAAP,KAAmBC,EAAnB,KAXa,SA8EEC,IA9EF,2EA8Eb,gDAAAC,EAAA,+EAEsBC,MAAM,qDAAD,OACgCxB,EADhC,kBAEnBoB,EAAa,WAAa,SAFP,2CAIrB,CAAEK,KAAM,SANd,cAEUC,EAFV,gBAQ4BA,EAAIC,OARhC,OAQUC,EARV,OASUC,EAAYD,EAAU1B,KACtB4B,EAAgBF,EAAUG,KAAKrB,SAC/BsB,EAAaJ,EAAUG,KAAKC,WAC5BC,EAAeL,EAAUG,KAAKG,KAC9BC,EAAWP,EAAUG,KAAKK,SAC1BC,EAAWT,EAAUG,KAAKO,SAC1BC,EAAmBX,EAAUY,QAAQ,GAAGlC,YACxCmC,EAAab,EAAUc,KAAKC,MAC5BzB,EAAOU,EAAUY,QAAQ,GAAGtB,KAClCf,EAAQ0B,GACRtB,EAAegC,GACf9B,EAAauB,GACbrB,EAAYmB,GACZzB,EAAe4B,GACflB,EAAWsB,GACXxB,EAAWsB,GACXlB,EAAawB,GACbtB,EAAQD,GA1BZ,kDA4BIC,EAAQ,MACRyB,QAAQC,IAAI,mBAAZ,MA7BJ,2DA9Ea,sBAoHb,OALAC,qBAAU,WAER,OADAxB,IACO,eACN,CAACF,EAAYlB,IAGd,sBAAK6C,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACE,qBAAKD,UAAU,WAAWE,IAAKC,EAAMC,OAAO,SAE9C,sBAAKJ,UAAU,kCAAf,UACE,uBACEK,GAAG,aACHC,KAAK,SACLC,SApDW,SAACC,GACpBtD,EAAQsD,EAAMC,OAAOC,QAoDbV,UAAU,kCACVW,YAAY,YACZ,aAAW,SACX,mBAAiB,iBAEnB,wBACEL,KAAK,SACLN,UAAU,oBACVY,QAASrC,EAHX,sBAQF,yBAAQqC,QAjHM,WAClBtC,GAAeD,IAgHmBiC,KAAK,SAASN,UAAU,gBAAtD,UACE,cAAC,IAAD,IADF,MACkB,cAAC,IAAD,UAGpB,uBAAMA,UAAU,MAAhB,UACE,sBAAKA,UAAU,sBAAf,UACE,4BAnHK,SAAC7B,GACZ,OAAQA,GACN,IAAK,MACH,OAAO,cAAC,IAAD,CAAY6B,UAAU,qBAC/B,IAAK,MACH,OAAO,cAAC,IAAD,CAAcA,UAAU,uBACjC,IAAK,MACH,OAAO,cAAC,IAAD,CAAaA,UAAU,qBAChC,IAAK,MACH,OAAO,cAAC,IAAD,CAAkBA,UAAU,uBACrC,IAAK,MACH,OAAO,cAAC,IAAD,CAASA,UAAU,qBAC5B,IAAK,MACH,OAAO,cAAC,IAAD,CAASA,UAAU,uBAC5B,IAAK,MACH,OAAO,cAAC,IAAD,CAAUA,UAAU,qBAC7B,IAAK,MACH,OAAO,cAAC,IAAD,CAAUA,UAAU,uBAC7B,IAAK,MAIL,IAAK,MACH,OAAO,cAAC,IAAD,CAAWA,UAAU,qBAH9B,IAAK,MACH,OAAO,cAAC,IAAD,CAAoBA,UAAU,uBAGvC,IAAK,MACH,OAAO,cAAC,IAAD,CAAgBA,UAAU,uBACnC,IAAK,MACH,OAAO,cAAC,IAAD,CAAmBA,UAAU,qBACtC,IAAK,MACH,OAAO,cAAC,IAAD,CAAqBA,UAAU,uBACxC,IAAK,MACH,OAAO,cAAC,IAAD,CAAiBA,UAAU,qBACpC,IAAK,MACH,OAAO,cAAC,IAAD,CAAiBA,UAAU,uBACpC,IAAK,MACH,OAAO,cAAC,IAAD,CAAOA,UAAU,qBAC1B,IAAK,MACH,OAAO,cAAC,IAAD,CAAYA,UAAU,uBAC/B,QACE,OAAO,cAAC,IAAD,CAAMA,UAAU,sBA4EjBa,CAAK1C,KACT,6BAAKhB,IACL,+BACG2D,KAAKC,MAAM1D,GACZ,8BAAMgB,EAAa,cAAC,IAAD,IAAmB,cAAC,IAAD,SAExC,8BA3IYtB,EA2IIQ,EA1IV,KAARR,GAA6B,IAAfA,EAAIiE,OAAqB,GAC7BjE,EAAIkE,cACEC,MAAM,KACFC,KAAI,SAACC,GAK3B,OAJcA,EAAKC,OAAO,GACNC,cACTF,EAAKG,MAAM,GACQN,iBAGfO,KAAK,WAkIlB,sBAAKxB,UAAU,UAAf,UACE,yCACA,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAuBA,UAAU,iBACjC,4CACA,oBAAGA,UAAU,eAAb,UACGc,KAAKC,MAAMtD,GACZ,8BAAMY,EAAa,cAAC,IAAD,IAAmB,cAAC,IAAD,YAG1C,sBAAK2B,UAAU,YAAf,UACE,cAAC,IAAD,CAAYA,UAAU,iBACtB,yCACA,oBAAGA,UAAU,eAAb,UAA6BrC,EAA7B,UAEF,sBAAKqC,UAAU,YAAf,UACE,cAAC,IAAD,CAAcA,UAAU,iBACxB,2CACA,qBAAKA,UAAU,OAAf,SACE,oBAAGA,UAAU,4BAAb,UACG/B,EADH,IACeI,EAAa,MAAQ,gBAIxC,sBAAK2B,UAAU,YAAf,UACE,cAAC,IAAD,CAAeA,UAAU,iBACzB,2CACA,oBAAGA,UAAU,eAAb,UACGc,KAAKC,MAAMlD,GACZ,8BAAMQ,EAAa,cAAC,IAAD,IAAmB,cAAC,IAAD,MAFxC,IAGGyC,KAAKC,MAAMhD,GACZ,8BAAMM,EAAa,cAAC,IAAD,IAAmB,cAAC,IAAD,sBC9MpDoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.191105e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de1a700a.webp\";","import \"./App.css\";\nimport logo from \"./img/logo.webp\";\nimport { useState, useEffect } from \"react\";\nimport {\n  WiDaySunny,\n  WiNightClear,\n  WiDayCloudy,\n  WiNightAltCloudy,\n  WiCloud,\n  WiCloudy,\n  WiDayRain,\n  WiNightAltRain,\n  WiDayThunderstorm,\n  WiNightAltLightning,\n  WiFog,\n  WiNightFog,\n  WiSnowflakeCold,\n  WiNightAltRainWind,\n  WiHumidity,\n  WiNa,\n  WiThermometerExterior,\n  WiThermometer,\n  WiStrongWind,\n  WiFahrenheit,\n  WiCelsius,\n} from \"react-icons/wi\";\n\nfunction App() {\n  const [city, setCity] = useState(\"Austin\");\n  const [name, setName] = useState(\"\");\n  const [currentTemp, setCurrentTemp] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [feelsLike, setFeelsLike] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [maxTemp, setMaxTemp] = useState(\"\");\n  const [minTemp, setMinTemp] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [fahrenheit, setFahrenheit] = useState(true);\n\n  const capitalize = (txt) => {\n    if (txt === \"\" || txt.length === 0) return \"\";\n    const lower = txt.toLowerCase();\n    const words = lower.split(\" \");\n    const new_words = words.map((word) => {\n      const first = word.charAt(0);\n      const upper = first.toUpperCase();\n      let rest = word.slice(1);\n      const new_word = upper + rest.toLowerCase();\n      return new_word;\n    });\n    return new_words.join(\" \");\n  };\n\n  const changeScale = () => {\n    setFahrenheit(!fahrenheit);\n  };\n\n  const find = (icon) => {\n    switch (icon) {\n      case \"01d\":\n        return <WiDaySunny className=\"weather-icon day\" />;\n      case \"01n\":\n        return <WiNightClear className=\"weather-icon night\" />;\n      case \"02d\":\n        return <WiDayCloudy className=\"weather-icon day\" />;\n      case \"02n\":\n        return <WiNightAltCloudy className=\"weather-icon night\" />;\n      case \"03d\":\n        return <WiCloud className=\"weather-icon day\" />;\n      case \"03n\":\n        return <WiCloud className=\"weather-icon night\" />;\n      case \"04d\":\n        return <WiCloudy className=\"weather-icon day\" />;\n      case \"04n\":\n        return <WiCloudy className=\"weather-icon night\" />;\n      case \"09d\":\n        return <WiDayRain className=\"weather-icon day\" />;\n      case \"09n\":\n        return <WiNightAltRainWind className=\"weather-icon night\" />;\n      case \"10d\":\n        return <WiDayRain className=\"weather-icon day\" />;\n      case \"10n\":\n        return <WiNightAltRain className=\"weather-icon night\" />;\n      case \"11d\":\n        return <WiDayThunderstorm className=\"weather-icon day\" />;\n      case \"11n\":\n        return <WiNightAltLightning className=\"weather-icon night\" />;\n      case \"13d\":\n        return <WiSnowflakeCold className=\"weather-icon day\" />;\n      case \"13n\":\n        return <WiSnowflakeCold className=\"weather-icon night\" />;\n      case \"50d\":\n        return <WiFog className=\"weather-icon day\" />;\n      case \"50n\":\n        return <WiNightFog className=\"weather-icon night\" />;\n      default:\n        return <WiNa className=\"weather-icon day\" />;\n    }\n  };\n\n  const handleChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  async function getWeather() {\n    try {\n      const res = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${\n          fahrenheit ? \"imperial\" : \"metric\"\n        }&APPID=e395dd8336d145da909e963c0606d556`,\n        { mode: \"cors\" }\n      );\n      const city_data = await res.json();\n      const city_name = city_data.name;\n      const city_humidity = city_data.main.humidity;\n      const feels_like = city_data.main.feels_like;\n      const current_temp = city_data.main.temp;\n      const max_temp = city_data.main.temp_max;\n      const min_temp = city_data.main.temp_min;\n      const city_description = city_data.weather[0].description;\n      const wind_speed = city_data.wind.speed;\n      const icon = city_data.weather[0].icon;\n      setName(city_name);\n      setDescription(city_description);\n      setFeelsLike(feels_like);\n      setHumidity(city_humidity);\n      setCurrentTemp(current_temp);\n      setMinTemp(min_temp);\n      setMaxTemp(max_temp);\n      setWindSpeed(wind_speed);\n      setIcon(icon);\n    } catch (error) {\n      setIcon(\"na\");\n      console.log(\"Error happened: \", error);\n    }\n  }\n\n  useEffect(() => {\n    getWeather();\n    return () => {};\n  }, [fahrenheit, name]);\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <img className=\"nav-logo\" src={logo} height=\"45\" />\n        </a>\n        <div className=\"input-group input-group-sm my-2\">\n          <input\n            id=\"search-bar\"\n            type=\"search\"\n            onChange={handleChange}\n            className=\"form-control text-light bg-dark\"\n            placeholder=\"Search...\"\n            aria-label=\"Search\"\n            aria-describedby=\"search-addon\"\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-secondary\"\n            onClick={getWeather}\n          >\n            enter\n          </button>\n        </div>\n        <button onClick={changeScale} type=\"button\" className=\"btn btn-light\">\n          <WiCelsius /> / <WiFahrenheit />\n        </button>\n      </nav>\n      <main className=\"row\">\n        <div className=\"container main-text\">\n          <p>{find(icon)}</p>\n          <h3>{name}</h3>\n          <h1>\n            {Math.round(currentTemp)}\n            <sup>{fahrenheit ? <WiFahrenheit /> : <WiCelsius />}</sup>\n          </h1>\n          <h2>{capitalize(description)}</h2>\n        </div>\n        <div className=\"sidebar\">\n          <h4>Details</h4>\n          <div className=\"grid-item\">\n            <WiThermometerExterior className=\"sidebar-icon\" />\n            <p>Feels Like </p>\n            <p className=\"sidebar-info\">\n              {Math.round(feelsLike)}\n              <sup>{fahrenheit ? <WiFahrenheit /> : <WiCelsius />}</sup>\n            </p>\n          </div>\n          <div className=\"grid-item\">\n            <WiHumidity className=\"sidebar-icon\" />\n            <p>Humidity</p>\n            <p className=\"sidebar-info\">{humidity}%</p>\n          </div>\n          <div className=\"grid-item\">\n            <WiStrongWind className=\"sidebar-icon\" />\n            <p>Wind Speed</p>\n            <div className=\"wind\">\n              <p className=\"wind-degrees sidebar-info\">\n                {windSpeed} {fahrenheit ? \"mph\" : \"knots\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"grid-item\">\n            <WiThermometer className=\"sidebar-icon\" />\n            <p>High | Low</p>\n            <p className=\"sidebar-info\">\n              {Math.round(maxTemp)}\n              <sup>{fahrenheit ? <WiFahrenheit /> : <WiCelsius />}</sup>|\n              {Math.round(minTemp)}\n              <sup>{fahrenheit ? <WiFahrenheit /> : <WiCelsius />}</sup>\n            </p>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}