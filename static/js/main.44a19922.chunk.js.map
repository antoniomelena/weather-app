{"version":3,"sources":["img/logo.webp","App.js","index.js"],"names":["App","useState","city","setCity","name","setName","currentTemp","setCurrentTemp","description","setDescription","feelsLike","setFeelsLike","humidity","setHumidity","maxTemp","setMaxTemp","minTemp","setMinTemp","windSpeed","setWindSpeed","icon","setIcon","fahrenheit","setFahrenheit","capitalize","txt","length","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","useEffect","a","fetch","mode","res","json","city_data","city_name","city_humidity","main","feels_like","current_temp","temp","max_temp","temp_max","min_temp","temp_min","city_description","weather","wind_speed","wind","speed","getWeather","className","href","src","logo","height","alt","id","type","onChange","event","target","value","placeholder","onClick","Math","round","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44a19922.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de1a700a.webp\";","import \"./App.css\";\nimport logo from \"./img/logo.webp\";\nimport { useState, useEffect } from \"react\";\nimport {\n  WiDaySunny,\n  WiNightClear,\n  WiDayCloudy,\n  WiNightAltCloudy,\n  WiCloud,\n  WiCloudy,\n  WiDayRain,\n  WiNightAltRain,\n  WiDayThunderstorm,\n  WiNightAltLightning,\n  WiFog,\n  WiNightFog,\n  WiSnowflakeCold,\n  WiNightAltRainWind,\n  WiHumidity,\n  WiNa,\n  WiThermometerExterior,\n  WiThermometer,\n  WiStrongWind,\n  WiFahrenheit,\n  WiCelsius,\n} from \"react-icons/wi\";\n\nfunction App() {\n  const [city, setCity] = useState(\"Austin\");\n  const [name, setName] = useState(\"\");\n  const [currentTemp, setCurrentTemp] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [feelsLike, setFeelsLike] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [maxTemp, setMaxTemp] = useState(\"\");\n  const [minTemp, setMinTemp] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [fahrenheit, setFahrenheit] = useState(true);\n\n  const capitalize = (txt) => {\n    if (txt === \"\" || txt.length === 0) return \"\";\n    const lower = txt.toLowerCase();\n    const words = lower.split(\" \");\n    const new_words = words.map((word) => {\n      const first = word.charAt(0);\n      const upper = first.toUpperCase();\n      let rest = word.slice(1);\n      const new_word = upper + rest.toLowerCase();\n      return new_word;\n    });\n    return new_words.join(\" \");\n  };\n\n  const changeScale = () => {\n    setFahrenheit(!fahrenheit);\n  };\n\n  const find = (icon) => {\n    switch (icon) {\n      case \"01d\":\n        return <WiDaySunny className=\"weather-icon \" />;\n      case \"01n\":\n        return <WiNightClear className=\"weather-icon \" />;\n      case \"02d\":\n        return <WiDayCloudy className=\"weather-icon\" />;\n      case \"02n\":\n        return <WiNightAltCloudy className=\"weather-icon\" />;\n      case \"03d\":\n        return <WiCloud className=\"weather-icon\" />;\n      case \"03n\":\n        return <WiCloud className=\"weather-icon\" />;\n      case \"04d\":\n        return <WiCloudy className=\"weather-icon\" />;\n      case \"04n\":\n        return <WiCloudy className=\"weather-icon\" />;\n      case \"09d\":\n        return <WiDayRain className=\"weather-icon\" />;\n      case \"09n\":\n        return <WiNightAltRainWind className=\"weather-icon\" />;\n      case \"10d\":\n        return <WiDayRain className=\"weather-icon\" />;\n      case \"10n\":\n        return <WiNightAltRain className=\"weather-icon\" />;\n      case \"11d\":\n        return <WiDayThunderstorm className=\"weather-icon\" />;\n      case \"11n\":\n        return <WiNightAltLightning className=\"weather-icon\" />;\n      case \"13d\":\n        return <WiSnowflakeCold className=\"weather-icon\" />;\n      case \"13n\":\n        return <WiSnowflakeCold className=\"weather-icon\" />;\n      case \"50d\":\n        return <WiFog className=\"weather-icon\" />;\n      case \"50n\":\n        return <WiNightFog className=\"weather-icon\" />;\n      default:\n        return <WiNa className=\"weather-icon\" />;\n    }\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  useEffect(() => {\n    async function getWeather() {\n      try {\n        const res = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${\n            fahrenheit ? \"imperial\" : \"metric\"\n          }&APPID=e395dd8336d145da909e963c0606d556`,\n          { mode: \"cors\" }\n        );\n        const city_data = await res.json();\n        const city_name = city_data.name;\n        const city_humidity = city_data.main.humidity;\n        const feels_like = city_data.main.feels_like;\n        const current_temp = city_data.main.temp;\n        const max_temp = city_data.main.temp_max;\n        const min_temp = city_data.main.temp_min;\n        const city_description = city_data.weather[0].description;\n        const wind_speed = city_data.wind.speed;\n        const icon = city_data.weather[0].icon;\n        setName(city_name);\n        setDescription(city_description);\n        setFeelsLike(feels_like);\n        setHumidity(city_humidity);\n        setCurrentTemp(current_temp);\n        setMinTemp(min_temp);\n        setMaxTemp(max_temp);\n        setWindSpeed(wind_speed);\n        setIcon(icon);\n      } catch (error) {\n        setIcon(\"na\");\n      }\n    }\n\n    getWeather();\n    return () => {};\n  }, [fahrenheit, city]);\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <img\n            className=\"nav-logo\"\n            src={logo}\n            height=\"45\"\n            alt=\"openweathermap logo\"\n          />\n        </a>\n        <div className=\"input-group input-group-sm my-2\">\n          <input\n            id=\"search-bar\"\n            type=\"search\"\n            onChange={handleChange}\n            className=\"form-control text-light bg-dark\"\n            placeholder=\"Search...\"\n            aria-label=\"Search\"\n            aria-describedby=\"search-addon\"\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-secondary\"\n            onClick={() => setCity(name)}\n            // onClick={getWeather}\n          >\n            enter\n          </button>\n          <button onClick={changeScale} type=\"button\" className=\"btn btn-scale\">\n            F | C\n          </button>\n        </div>\n      </nav>\n      <main className=\"row\">\n        <div className=\"container temperature\">\n          <h1 className=\"temperature--numbers\">\n            {Math.round(currentTemp)}\n            {fahrenheit ? (\n              <WiFahrenheit className=\"temperature--scale\" />\n            ) : (\n              <WiCelsius className=\"temperature--scale\" />\n            )}\n          </h1>\n          <h3 className=\"city\">{capitalize(city)}</h3>\n          <div className=\"description\">\n            <h2>{capitalize(description)}</h2>\n            {find(icon)}\n          </div>\n        </div>\n        <div className=\"sidebar\">\n          <div className=\"sidebar-cities\">\n            <h3 className=\"sidebar-city\" onClick={() => setCity(\"Austin\")}>\n              Austin\n            </h3>\n            <h3 className=\"sidebar-city\" onClick={() => setCity(\"New York\")}>\n              New York\n            </h3>\n            <h3 className=\"sidebar-city\" onClick={() => setCity(\"Los Angeles\")}>\n              Los Angeles\n            </h3>\n            <h3 className=\"sidebar-city\" onClick={() => setCity(\"Pheonix\")}>\n              Pheonix\n            </h3>\n          </div>\n          <div className=\"sidebar-weather\">\n            <h3 className=\"sidebar-title\">Weather Details</h3>\n            <div className=\"grid\">\n              <div className=\"grid-item\">\n                <div className=\"sidebar-icon__container\">\n                  <WiThermometerExterior className=\"sidebar-icon\" />\n                  <p>Feels Like </p>\n                </div>\n                <p className=\"sidebar-info\">\n                  {Math.round(feelsLike)}\n                  {fahrenheit ? <WiFahrenheit /> : <WiCelsius />}\n                </p>\n              </div>\n              <div className=\"grid-item\">\n                <div className=\"sidebar-icon__container\">\n                  <WiHumidity className=\"sidebar-icon\" />\n                  <p>Humidity</p>\n                </div>\n                <p className=\"sidebar-info\">{humidity}%</p>\n              </div>\n              <div className=\"grid-item\">\n                <div className=\"sidebar-icon__container\">\n                  <WiStrongWind className=\"sidebar-icon\" />\n                  <p>Wind Speed</p>\n                </div>\n                <div className=\"wind\"></div>\n                <p className=\"wind-degrees sidebar-info\">\n                  {windSpeed} {fahrenheit ? \"mph\" : \"knots\"}\n                </p>\n              </div>\n              <div className=\"grid-item\">\n                <div className=\"sidebar-icon__container\">\n                  <WiThermometer className=\"sidebar-icon\" />\n                  <p>High | Low</p>\n                </div>\n                <p className=\"sidebar-info\">\n                  {Math.round(maxTemp)}\n                  {fahrenheit ? <WiFahrenheit /> : <WiCelsius />}|<span> </span>\n                  {Math.round(minTemp)}\n                  {fahrenheit ? <WiFahrenheit /> : <WiCelsius />}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}